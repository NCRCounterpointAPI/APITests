{
	"id": "485c6fbb-3842-5719-5238-bc0685321b36",
	"name": "InventoryTests",
	"description": "",
	"order": [
		"5640cd79-77b8-f997-a9d1-62784e486e07",
		"f3d52bea-1da1-cd43-8cf0-67983a1615f4",
		"99d978ba-e63f-4a48-da48-8f5fd0dfe143",
		"468b6fff-ecfa-4e3b-008c-99ae9cea92d3",
		"9727d277-22b7-2e89-7e6b-a0c7a249dd99",
		"50272765-a173-dc40-4fea-8f246f74c339",
		"36d346b4-a86d-4049-c3b4-6107d0d92def",
		"3a636581-f37e-3010-49dd-382f12841c2d",
		"47cb754f-15b2-1ec2-4954-828e0130c68b"
	],
	"folders": [],
	"timestamp": 1429283659603,
	"owner": "43287",
	"remoteLink": "",
	"public": false,
	"requests": [
		{
			"id": "36d346b4-a86d-4049-c3b4-6107d0d92def",
			"headers": "Authorization: {{Authorization}}\nAPIKey: {{APIKey}}\nContent-Type: {{Content-Type}}\n",
			"url": "{{protocol}}://{{server}}:{{port}}/InventoryControl",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var respData = JSON.parse(responseBody);\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Has IM_CTL\"] = responseBody.has(respData.IM_CTL.KEY_ID);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1431629630174,
			"name": "GET Inventory Control",
			"description": "",
			"collectionId": "485c6fbb-3842-5719-5238-bc0685321b36"
		},
		{
			"id": "3a636581-f37e-3010-49dd-382f12841c2d",
			"headers": "Authorization: {{Authorization}}\nAPIKey: {{APIKey}}\nContent-Type: {{Content-Type}}\n",
			"url": "{{protocol}}://{{server}}:{{port}}/Item/Inventory/EC",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var respData = JSON.parse(responseBody);\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Has INV\"] = respData.IM_INV.length > 0;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1431629555566,
			"name": "GET Inventory eCommerce",
			"description": "",
			"collectionId": "485c6fbb-3842-5719-5238-bc0685321b36"
		},
		{
			"id": "468b6fff-ecfa-4e3b-008c-99ae9cea92d3",
			"headers": "Authorization: {{Authorization}}\nAPIKey: {{APIKey}}\nContent-Type: {{Content-Type}}\n",
			"url": "{{protocol}}://{{server}}:{{port}}/Item/{{ITEM_NO}}/InventoryCost/{{LOC_ID}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var respData = JSON.parse(responseBody);\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"ITEM_NO Matches\"] = respData.IM_INV_LOC.ITEM_NO === data.ITEM_NO;\ntests[\"LOC_ID Matches\"] = respData.IM_INV_LOC.LOC_ID === data.LOC_ID;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1442945403865,
			"name": "GET Inventory Cost",
			"description": "",
			"collectionId": "485c6fbb-3842-5719-5238-bc0685321b36"
		},
		{
			"id": "47cb754f-15b2-1ec2-4954-828e0130c68b",
			"headers": "Authorization: {{Authorization}}\nAPIKey: {{APIKey}}\nContent-Type: {{Content-Type}}\n",
			"url": "{{protocol}}://{{server}}:{{port}}/Item/Inventory/EAST?subcatcod=snacks",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var respData = JSON.parse(responseBody);\n\ntests[\"Status code is 200\"] = responseCode.code === 200;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1442944872036,
			"name": "GET Inventory by Location",
			"description": "",
			"collectionId": "485c6fbb-3842-5719-5238-bc0685321b36"
		},
		{
			"id": "50272765-a173-dc40-4fea-8f246f74c339",
			"headers": "Authorization: {{Authorization}}\nAPIKey: {{APIKey}}\nContent-Type: {{Content-Type}}\n",
			"url": "{{protocol}}://{{server}}:{{port}}/Item/{{ITEM_NO}}/InventoryLocation/{{BAD_LOC_ID}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var respData = JSON.parse(responseBody);\n\ntests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Nice Message\"] = respData.Message === 'Inventory location record does not exist for item ' + data.ITEM_NO + ' location ' + data.BAD_LOC_ID;\ntests[\"Error Code\"] = respData.ErrorCode === 'ERROR_RECORD_NOT_FOUND';",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1431630443572,
			"name": "GET Inventory Location - Invalid LOC_ID",
			"description": "Valid ITEM_NO\nInvalid LOC_ID",
			"collectionId": "485c6fbb-3842-5719-5238-bc0685321b36"
		},
		{
			"id": "5640cd79-77b8-f997-a9d1-62784e486e07",
			"headers": "Authorization: {{Authorization}}\nAPIKey: {{APIKey}}\nContent-Type: {{Content-Type}}\n",
			"url": "{{protocol}}://{{server}}:{{port}}/Item/{{ITEM_NO}}/Inventory/{{LOC_ID}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var respData = JSON.parse(responseBody);\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"ITEM_NO Matches\"] = respData.IM_INV.ITEM_NO === data.ITEM_NO;\ntests[\"LOC_ID Matches\"] = respData.IM_INV.LOC_ID === data.LOC_ID;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1431630228762,
			"name": "GET Item Inventory by Location",
			"description": "",
			"collectionId": "485c6fbb-3842-5719-5238-bc0685321b36"
		},
		{
			"id": "9727d277-22b7-2e89-7e6b-a0c7a249dd99",
			"headers": "Authorization: {{Authorization}}\nAPIKey: {{APIKey}}\nContent-Type: {{Content-Type}}\n",
			"url": "{{protocol}}://{{server}}:{{port}}/Item/{{BAD_ITEM_NO}}/InventoryLocation/{{LOC_ID}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var respData = JSON.parse(responseBody);\n\ntests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Nice Message\"] = respData.Message === 'Inventory location record does not exist for item ' + data.BAD_ITEM_NO + ' location ' + data.LOC_ID;\ntests[\"Error Code\"] = respData.ErrorCode === 'ERROR_RECORD_NOT_FOUND';",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1431630441283,
			"name": "GET Inventory Location - Invalid Item_No",
			"description": "Invalid ITEM_NO",
			"collectionId": "485c6fbb-3842-5719-5238-bc0685321b36"
		},
		{
			"id": "99d978ba-e63f-4a48-da48-8f5fd0dfe143",
			"headers": "Authorization: {{Authorization}}\nAPIKey: {{APIKey}}\nContent-Type: {{Content-Type}}\n",
			"url": "{{protocol}}://{{server}}:{{port}}/Item/{{ITEM_NO}}/Inventory/{{BAD_LOC_ID}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var respData = JSON.parse(responseBody);\n\ntests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Nice Message\"] = respData.Message === 'Inventory record does not exist for item ' + data.ITEM_NO + ' location ' + data.BAD_LOC_ID;\ntests[\"Error Code\"] = respData.ErrorCode === 'ERROR_RECORD_NOT_FOUND';",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1431630382536,
			"name": "GET Inventory by Location - LOC_ID not found",
			"description": "",
			"collectionId": "485c6fbb-3842-5719-5238-bc0685321b36"
		},
		{
			"id": "f3d52bea-1da1-cd43-8cf0-67983a1615f4",
			"headers": "Authorization: {{Authorization}}\nAPIKey: {{APIKey}}\nContent-Type: {{Content-Type}}\n",
			"url": "{{protocol}}://{{server}}:{{port}}/Item/{{BAD_ITEM_NO}}/Inventory/{{LOC_ID}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var respData = JSON.parse(responseBody);\n\ntests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Nice Message\"] = respData.Message === 'Inventory record does not exist for item ' + data.BAD_ITEM_NO + ' location ' + data.LOC_ID;\ntests[\"Error Code\"] = respData.ErrorCode === 'ERROR_RECORD_NOT_FOUND';",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1431630386028,
			"name": "GET Inventory by Location - ITEM_NO not found",
			"description": "",
			"collectionId": "485c6fbb-3842-5719-5238-bc0685321b36"
		}
	]
}