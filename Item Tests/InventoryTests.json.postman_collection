{
	"id": "6f5945b4-49fa-3899-3c18-71e2cba477cc",
	"name": "InventoryTests",
	"description": "",
	"order": [
		"0e9bb8cf-06f6-748c-5e12-77cc5b89ebd3",
		"406edae5-be1f-678a-6d9a-50a8b6573992",
		"02aadd45-f261-e88d-bd44-2b326f8ecee6",
		"1fd8ffb1-4cd0-27b8-7632-806903a2fef0",
		"9c3cb118-d34b-7cf2-161d-90d6c609b5b6",
		"8b15ae78-edd3-12a9-7c0c-9a4aa9ecb5da",
		"7cf90c62-407e-2d8c-ebe6-4d5b60005548",
		"c8677e54-773a-39ad-3723-52e81edb3ae9"
	],
	"folders": [],
	"timestamp": 1429283659603,
	"synced": false,
	"owner": "43287",
	"sharedWithTeam": false,
	"subscribed": false,
	"remoteLink": "",
	"public": false,
	"write": true,
	"requests": [
		{
			"id": "02aadd45-f261-e88d-bd44-2b326f8ecee6",
			"headers": "Authorization: {{Authorization}}\nAPIKey: {{APIKey}}\nContent-Type: {{Content-Type}}\n",
			"url": "{{protocol}}://{{server}}:{{port}}/Item/{{ITEM_NO}}/Inventory/{{BAD_LOC_ID}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var respData = JSON.parse(responseBody);\n\ntests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Nice Message\"] = respData.Message === 'Inventory record does not exist for item ' + data.ITEM_NO + ' location ' + data.BAD_LOC_ID;\ntests[\"Error Code\"] = respData.ErrorCode === 'ERROR_RECORD_NOT_FOUND';",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1431630382536,
			"name": "GET Inventory by Location - LOC_ID not found",
			"description": "",
			"collectionId": "6f5945b4-49fa-3899-3c18-71e2cba477cc",
			"synced": false
		},
		{
			"id": "0e9bb8cf-06f6-748c-5e12-77cc5b89ebd3",
			"headers": "Authorization: {{Authorization}}\nAPIKey: {{APIKey}}\nContent-Type: {{Content-Type}}\n",
			"url": "{{protocol}}://{{server}}:{{port}}/Item/{{ITEM_NO}}/Inventory/{{LOC_ID}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var respData = JSON.parse(responseBody);\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"ITEM_NO Matches\"] = respData.IM_INV.ITEM_NO === data.ITEM_NO;\ntests[\"LOC_ID Matches\"] = respData.IM_INV.LOC_ID === data.LOC_ID;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1431630228762,
			"name": "GET Inventory by Location",
			"description": "",
			"collectionId": "6f5945b4-49fa-3899-3c18-71e2cba477cc",
			"synced": false
		},
		{
			"id": "1fd8ffb1-4cd0-27b8-7632-806903a2fef0",
			"headers": "Authorization: {{Authorization}}\nAPIKey: {{APIKey}}\nContent-Type: {{Content-Type}}\n",
			"url": "{{protocol}}://{{server}}:{{port}}/Item/{{ITEM_NO}}/InventoryLocation/{{LOC_ID}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var respData = JSON.parse(responseBody);\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"ITEM_NO Matches\"] = respData.IM_INV_LOC.ITEM_NO === data.ITEM_NO;\ntests[\"LOC_ID Matches\"] = respData.IM_INV_LOC.LOC_ID === data.LOC_ID;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1431630121437,
			"name": "GET Inventory Location",
			"description": "",
			"collectionId": "6f5945b4-49fa-3899-3c18-71e2cba477cc",
			"synced": false
		},
		{
			"id": "406edae5-be1f-678a-6d9a-50a8b6573992",
			"headers": "Authorization: {{Authorization}}\nAPIKey: {{APIKey}}\nContent-Type: {{Content-Type}}\n",
			"url": "{{protocol}}://{{server}}:{{port}}/Item/{{BAD_ITEM_NO}}/Inventory/{{LOC_ID}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var respData = JSON.parse(responseBody);\n\ntests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Nice Message\"] = respData.Message === 'Inventory record does not exist for item ' + data.BAD_ITEM_NO + ' location ' + data.LOC_ID;\ntests[\"Error Code\"] = respData.ErrorCode === 'ERROR_RECORD_NOT_FOUND';",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1431630386028,
			"name": "GET Inventory by Location - ITEM_NO not found",
			"description": "",
			"collectionId": "6f5945b4-49fa-3899-3c18-71e2cba477cc",
			"synced": false
		},
		{
			"id": "7cf90c62-407e-2d8c-ebe6-4d5b60005548",
			"headers": "Authorization: {{Authorization}}\nAPIKey: {{APIKey}}\nContent-Type: {{Content-Type}}\n",
			"url": "{{protocol}}://{{server}}:{{port}}/InventoryControl",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var respData = JSON.parse(responseBody);\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Has IM_CTL\"] = responseBody.has(respData.IM_CTL.KEY_ID);",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1431629630174,
			"name": "GET Inventory Control",
			"description": "",
			"collectionId": "6f5945b4-49fa-3899-3c18-71e2cba477cc",
			"synced": false
		},
		{
			"id": "8b15ae78-edd3-12a9-7c0c-9a4aa9ecb5da",
			"headers": "Authorization: {{Authorization}}\nAPIKey: {{APIKey}}\nContent-Type: {{Content-Type}}\n",
			"url": "{{protocol}}://{{server}}:{{port}}/Item/{{ITEM_NO}}/InventoryLocation/{{BAD_LOC_ID}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var respData = JSON.parse(responseBody);\n\ntests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Nice Message\"] = respData.Message === 'Inventory location record does not exist for item ' + data.ITEM_NO + ' location ' + data.BAD_LOC_ID;\ntests[\"Error Code\"] = respData.ErrorCode === 'ERROR_RECORD_NOT_FOUND';",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1431630443572,
			"name": "GET Inventory Location - Invalid LOC_ID",
			"description": "Valid ITEM_NO\nInvalid LOC_ID",
			"collectionId": "6f5945b4-49fa-3899-3c18-71e2cba477cc",
			"synced": false
		},
		{
			"id": "9c3cb118-d34b-7cf2-161d-90d6c609b5b6",
			"headers": "Authorization: {{Authorization}}\nAPIKey: {{APIKey}}\nContent-Type: {{Content-Type}}\n",
			"url": "{{protocol}}://{{server}}:{{port}}/Item/{{BAD_ITEM_NO}}/InventoryLocation/{{LOC_ID}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var respData = JSON.parse(responseBody);\n\ntests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Nice Message\"] = respData.Message === 'Inventory location record does not exist for item ' + data.BAD_ITEM_NO + ' location ' + data.LOC_ID;\ntests[\"Error Code\"] = respData.ErrorCode === 'ERROR_RECORD_NOT_FOUND';",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1431630441283,
			"name": "GET Inventory Location - Invalid Item_No",
			"description": "Invalid ITEM_NO",
			"collectionId": "6f5945b4-49fa-3899-3c18-71e2cba477cc",
			"synced": false
		},
		{
			"id": "c8677e54-773a-39ad-3723-52e81edb3ae9",
			"headers": "Authorization: {{Authorization}}\nAPIKey: {{APIKey}}\nContent-Type: {{Content-Type}}\n",
			"url": "{{protocol}}://{{server}}:{{port}}/Item/Inventory/EC",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var respData = JSON.parse(responseBody);\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Has INV\"] = respData.IM_INV.length > 0;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1431629555566,
			"name": "GET Inventory eCommerce",
			"description": "",
			"collectionId": "6f5945b4-49fa-3899-3c18-71e2cba477cc",
			"synced": false
		}
	]
}